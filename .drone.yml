kind: pipeline
name: default

steps:
  - name: npm
    image: node:10.16
    group: laravel
    commands:
      - node -v
      - npm -v
      - yarn --version
      - yarn config set cache-folder .yarn-cache
      - yarn install
      - yarn run production

  - name: composer-stage
    image: lorisleiva/laravel-docker:latest
    group: laravel
    commands:
      - php -v
      - composer -V
      - cp .env.example .env
      - git config --global http.sslVerify false
      - composer config repo.packagist composer https://mirrors.aliyun.com/composer/
      # - composer global require hirak/prestissimo
      - composer install --prefer-dist -vvv
      - php artisan key:generate
  #      - php artisan migrate
  #      - ./vendor/bin/phpunit
    when:
      branch:
        - stage

  - name: composer-prod
    image: lorisleiva/laravel-docker:latest
    group: laravel
    commands:
      - php -v
      - composer -V
      - cp .env.example .env
      - git config --global http.sslVerify false
      - composer config repo.packagist composer https://mirrors.aliyun.com/composer/
      # - composer global require hirak/prestissimo
      - composer install --prefer-dist -vvv
      - php artisan key:generate
  #      - php artisan migrate
  #      - ./vendor/bin/phpunit
    when:
      branch:
        - master

  - name: codestyle
    image: lorisleiva/laravel-docker:latest
    group: laravel
    commands:
      - phpcs --standard=PSR2 --extensions=php --ignore=app/Support/helpers.php app

  - name: phpunit
    image: lorisleiva/laravel-docker:latest
    group: laravel
    commands:
      - phpunit --coverage-text --colors=never

  - name: stage
    image: lorisleiva/laravel-docker:latest
    group: laravel
    environment:
      SSH_KEY:
        from_secret: ssh_key
    commands:
      - eval $(ssh-agent -s)
      - export ssh_path=~/.ssh
      - mkdir -p $ssh_path
      # - echo $SSH_KEY
      - echo $SSH_KEY | tr -d '\r' | sed "s/-----BEGIN RSA PRIVATE KEY----- //g" | sed "s/ -----END RSA PRIVATE KEY-----//g" | sed "s/ /\n/g" > $ssh_path/deployerkey
      - sed -i '1i -----BEGIN RSA PRIVATE KEY-----' $ssh_path/deployerkey # 在第一行前添加字符串
      - echo '-----END RSA PRIVATE KEY-----' >> $ssh_path/deployerkey # 在最后一行行前添加字符串
      - chmod 700 $ssh_path/deployerkey
      - echo -e "Host *\n\tStrictHostKeyChecking no\n" > $ssh_path/config
      - php artisan deploy --hosts=drone-deploy.webfsd.com -s upload -vvv
    when:
      branch:
        - stage

  - name: prod
    image: lorisleiva/laravel-docker:latest
    group: laravel
    environment:
      SSH_KEY:
        from_secret: ssh_key
    commands:
      - eval $(ssh-agent -s)
      - export ssh_path=~/.ssh
      - mkdir -p $ssh_path
      # - echo $SSH_KEY
      - echo $SSH_KEY | tr -d '\r' | sed "s/-----BEGIN RSA PRIVATE KEY----- //g" | sed "s/ -----END RSA PRIVATE KEY-----//g" | sed "s/ /\n/g" > $ssh_path/deployerkey
      - sed -i '1i -----BEGIN RSA PRIVATE KEY-----' $ssh_path/deployerkey # 在第一行前添加字符串
      - echo '-----END RSA PRIVATE KEY-----' >> $ssh_path/deployerkey # 在最后一行行前添加字符串
      - chmod 700 $ssh_path/deployerkey
      - echo -e "Host *\n\tStrictHostKeyChecking no\n" > $ssh_path/config
      - php artisan deploy --hosts=drone-deploy-prod.webfsd.com -s upload -vvv
    when:
      branch:
        - master

  - name: dingtalk-notify-stage
    image: lddsb/drone-dingtalk-message
    settings:
      sha_link: true
      # message_pic: true
      message_color: true
      token:
        from_secret: dingtalk_robot_access_token
      type: markdown
    when:
      status:
        - failure
        - success
      branch:
        - stage

  - name: dingtalk-notify-prod
    image: lddsb/drone-dingtalk-message
    settings:
      sha_link: true
      message_pic: true
      message_color: true
      token:
        from_secret: dingtalk_robot_access_token
      type: markdown
    when:
      status:
        - failure
        - success
      branch:
        - master
