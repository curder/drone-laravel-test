kind: pipeline
name: build

steps:
  - name: npm
    image: node:10.16
    group: laravel
    commands:
      - node -v
      - npm -v
      - yarn --version
      - yarn config set cache-folder .yarn-cache
      - yarn install
      - yarn run production

  - name: composer
    image: lorisleiva/laravel-docker:latest
    group: laravel
    commands:
      - php -v
      - composer -V
      - cp .env.example .env
      - composer config repo.packagist composer https://mirrors.aliyun.com/composer/
      - composer install --prefer-dist -vvv
      - php artisan key:generate
  #      - php artisan migrate
  #      - ./vendor/bin/phpunit
  - name: stage
    image: lorisleiva/laravel-docker:latest
    group: laravel
    environment:
      SSH_KEY:
        from_secret: ssh_key
    commands:
      - eval $(ssh-agent -s)
      - adduser -D deployer
      - su - deployer
      - mkdir -p ~/.ssh
      - echo "$SSH_KEY" > /home/deployer/.ssh/deployerkey
      - chmod 700 ~/.ssh/deployerkey
      # - eval $(ssh-agent -s)
      # - echo "$SSH_KEY" | tr -d '\r' | ssh-add - > /dev/null
      # - mkdir -p ~/.ssh
      # - chmod 700 ~/.ssh
      # - [[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
      # - ssh-keyscan drone-deploy.webfsd.com >> ~/.ssh/known_hosts
      # - chmod 644 ~/.ssh/known_host
      - php artisan deploy --hosts=drone-deploy.webfsd.com -s upload -vvv

---
kind: pipeline
name: stage

steps:
  - name: deploy_to_stage
    pull: true
    image: appleboy/drone-ssh
    settings:
      host:
        from_secret: ssh_host
      username:
        from_secret: ssh_username
      key:
        from_secret: ssh_key
      port:
        from_secret: ssh_port
      script:
        - cd /var/www/codes/temp/drone-deploy.webfsd.com/current
        # - php artisan deploy --hosts=drone-deploy.webfsd.com -s upload -vvv

depends_on:
  - build

---
kind: pipeline
name: production

steps:
  - name: deploy_to_production
    image: appleboy/drone-ssh
    settings:
      host:
        from_secret: ssh_host
      username:
        from_secret: ssh_username
      key:
        from_secret: ssh_key
      port:
        from_secret: ssh_port
      script:
        - cd /var/www/codes/temp/drone-deploy.webfsd.com/current
        - echo "deploy to production env"
        # - php artisan deploy --hosts=drone-deploy.webfsd.com -s upload -vvv

trigger:
  status:
    - success

depends_on:
  - stage
# services:
#   redis:
#     image: redis:latest
#     ports:
#     - 6379

#   database:
#     image: mysql:5.7
#     ports:
#     - 3306
#     entrypoint: [ mysqld ]
#     environment:
#       MYSQL_DATABASE: laravel
#       MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
#     command: [ "--character-set-server=utf8mb4" ]
