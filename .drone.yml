kind: pipeline
name: stage

steps:
  - name: restore-cache
    image: drillster/drone-volume-cache
    volumes:
      - name: cache
        path: /cache
    settings:
      restore: true
      mount:
        - ./node_modules
        - ./vendor

  - name: npm
    image: node:10.16
    group: laravel
    commands:
      - node -v
      - npm -v
      - yarn --version
      - yarn config set cache-folder .yarn-cache
      - yarn install
      - yarn run production

  - name: composer
    image: lorisleiva/laravel-docker:latest
    group: laravel
    commands:
      - php -v
      - composer -V
      - cp .env.example .env
      - git config --global http.sslVerify false
      - composer config repo.packagist composer https://mirrors.aliyun.com/composer/
      # - composer global require hirak/prestissimo
      - composer install --prefer-dist -vvv
      - php artisan key:generate
  #      - php artisan migrate
  #      - ./vendor/bin/phpunit

  - name: rebuild-cache
    image: drillster/drone-volume-cache
    volumes:
      - name: cache
        path: /cache
    settings:
      rebuild: true
      mount:
        - ./node_modules
        - ./vendor

  - name: codestyle
    image: lorisleiva/laravel-docker:latest
    group: laravel
    commands:
      - phpcs --standard=PSR2 --extensions=php --ignore=app/Support/helpers.php app

  - name: phpunit
    image: lorisleiva/laravel-docker:latest
    group: laravel
    commands:
      - phpunit --coverage-text --colors=never

  - name: stage
    image: lorisleiva/laravel-docker:latest
    group: laravel
    environment:
      SSH_KEY:
        from_secret: ssh_key
    commands:
      - eval $(ssh-agent -s)
      - export ssh_path=~/.ssh
      - mkdir -p $ssh_path
      # - echo $SSH_KEY
      - echo $SSH_KEY | tr -d '\r' | sed "s/-----BEGIN RSA PRIVATE KEY----- //g" | sed "s/ -----END RSA PRIVATE KEY-----//g" | sed "s/ /\n/g" > $ssh_path/deployerkey
      - sed -i '1i -----BEGIN RSA PRIVATE KEY-----' $ssh_path/deployerkey # 在第一行前添加字符串
      - echo '-----END RSA PRIVATE KEY-----' >> $ssh_path/deployerkey # 在最后一行行前添加字符串
      - chmod 700 $ssh_path/deployerkey
      - echo -e "Host *\n\tStrictHostKeyChecking no\n" > $ssh_path/config
      - php artisan deploy --hosts=drone-deploy.webfsd.com -s upload -vvv

volumes:
  - name: cache
    host:
      path: /tmp/drone/cache
---
kind: pipeline
name: production
steps:
  - name: npm
    image: node:10.16
    group: laravel
    commands:
      - node -v
      - npm -v
      - yarn --version
      - yarn config set cache-folder .yarn-cache
      - yarn install
      - yarn run production

  - name: composer
    image: lorisleiva/laravel-docker:latest
    group: laravel
    commands:
      - php -v
      - composer -V
      - cp .env.example .env
      - composer config repo.packagist composer https://mirrors.aliyun.com/composer/
      - composer install --verbose --prefer-dist --no-interaction --optimize-autoloader --no-dev -vvv
  #      - php artisan migrate
  #      - ./vendor/bin/phpunit
  - name: prod
    image: lorisleiva/laravel-docker:latest
    group: laravel
    environment:
      SSH_KEY:
        from_secret: ssh_key
    commands:
      - eval $(ssh-agent -s)
      - export ssh_path=~/.ssh
      - mkdir -p $ssh_path
      # - echo $SSH_KEY
      - echo $SSH_KEY | tr -d '\r' | sed "s/-----BEGIN RSA PRIVATE KEY----- //g" | sed "s/ -----END RSA PRIVATE KEY-----//g" | sed "s/ /\n/g" > $ssh_path/deployerkey
      - sed -i '1i -----BEGIN RSA PRIVATE KEY-----' $ssh_path/deployerkey # 在第一行前添加字符串
      - echo '-----END RSA PRIVATE KEY-----' >> $ssh_path/deployerkey # 在最后一行行前添加字符串
      - chmod 700 $ssh_path/deployerkey
      - echo -e "Host *\n\tStrictHostKeyChecking no\n" > $ssh_path/config
      - php artisan deploy --hosts=drone-deploy-prod.webfsd.com -s upload -vvv

trigger:
  branch:
    - release
# ---
# kind: pipeline
# name: production

# steps:
#   - name: deploy_to_production
#     image: appleboy/drone-ssh
#     settings:
#       host:
#         from_secret: ssh_host
#       username:
#         from_secret: ssh_username
#       key:
#         from_secret: ssh_key
#       port:
#         from_secret: ssh_port
#       script:
#         - cd /var/www/codes/temp/drone-deploy.webfsd.com/current
#         - echo "deploy to production env"
#         # - php artisan deploy --hosts=drone-deploy.webfsd.com -s upload -vvv

# trigger:
#   status:
#     - success

# depends_on:
#   - default
# services:
#   redis:
#     image: redis:latest
#     ports:
#     - 6379

#   database:
#     image: mysql:5.7
#     ports:
#     - 3306
#     entrypoint: [ mysqld ]
#     environment:
#       MYSQL_DATABASE: laravel
#       MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
#     command: [ "--character-set-server=utf8mb4" ]
